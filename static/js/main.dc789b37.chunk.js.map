{"version":3,"sources":["redux/views/HomeView.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/views/RegisterView.js","redux/views/LoginView.js","Components/phonebookForm/PhonebookFormItemStyled.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","Components/phonebookForm/PhonebookFormItem.js","redux/contacts/contacts-selectors.js","Components/filter/FilterItem.js","Components/contacts/ContactsItemStyled.js","Components/contacts/ContactsItem.js","redux/views/ContactsView.js","Components/container/Container.js","Components/Navigation.js","Components/UserMenu/default-avatar.png","Components/UserMenu/UserMenu.js","Components/AuthNav.js","Components/AppBar.js","Components/PrivatRoute.js","Components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["styles","container","minHeight","display","alignItems","justifyContent","title","fontWeight","fontSize","textAlign","HomeView","style","role","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logOut","console","log","logIn","getCurrentUser","getState","persistedToken","auth","get","state","form","width","label","flexDirection","marginBottom","RegisterView","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","autoComplete","type","onChange","Component","mapDispatchToProps","authOperations","connect","LoginView","onLogin","PhonebookItemStyled","styled","fetchRequest","fetchSuccess","fetchError","contactSaveRequest","contactSaveSuccess","contactSaveError","contactRemoveRequest","contactRemoveSuccess","contactRemoveError","filterUpdate","contactSave","contact","then","catch","contactRemove","contactId","delete","fetchContacts","PhonebookFormItem","number","handleNameChange","evt","currentTarget","reset","className","action","pattern","required","id","getFilter","contacts","filter","getLoading","loading","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","item","includes","contactsSelectors","onChangeFilter","ContactsItemStyled","ul","ContactsItem","onClickRemove","onClick","onRemove","length","map","ContactsView","formSubmithandler","dublicateContact","find","alert","newContact","uuidv4","preState","isLoadingContacts","contactsOperations","Container","children","link","textDecoration","padding","color","activeLink","authSelectors","to","exact","activeStyle","avatar","marginRight","onLogout","defaultAvatar","src","alt","AuthNav","header","borderBottom","component","routeProps","render","redirectedTo","restricted","App","onGetCurrentUser","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc789b37.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst styles = {\r\n  container: {\r\n    minHeight: \"calc(100vh - 50px)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    fontWeight: 500,\r\n    fontSize: 48,\r\n    textAlign: \"center\",\r\n  },\r\n};\r\n\r\nconst HomeView = () => (\r\n  <div style={styles.container}>\r\n    <h1 style={styles.title}>\r\n      Приветственная страница нашего сервиса{\" \"}\r\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\r\n        💁‍♀️\r\n      </span>\r\n    </h1>\r\n  </div>\r\n);\r\n\r\nexport default HomeView;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n});\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    console.log(axios.defaults.headers.common.Authorization);\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nconst getUsername = (state) => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authOperations } from \"../auth\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Страница регистрации</h1>\r\n\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          style={styles.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label style={styles.label}>\r\n            Имя\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Зарегистрироваться</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authOperations } from \"../auth\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nclass LoginView extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onLogin(this.state);\r\n\r\n    this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Страница логина</h1>\r\n\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          style={styles.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label style={styles.label}>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Войти</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: authOperations.logIn,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView);\r\n","import styled from \"styled-components\";\r\n\r\nexport const PhonebookItemStyled = styled.form`\r\n  width: 250px;\r\n  border: 1px solid blue;\r\n  .phonebook-name {\r\n    margin-left: 10px;\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n  }\r\n  .phonebook-number {\r\n    margin-left: 10px;\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .input {\r\n    width: 150px;\r\n    margin-left: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid blue;\r\n    :hover {\r\n      border-color: red;\r\n    }\r\n    :focus {\r\n      border-color: red;\r\n      border: 3px solid red;\r\n    }\r\n  }\r\n\r\n  .add-contact-btn {\r\n    display: block;\r\n    margin-left: 10px;\r\n    margin-bottom: 10px;\r\n    border-radius: 18px;\r\n    color: blue;\r\n    border-color: blue;\r\n    background-color: yellow;\r\n    :hover {\r\n      color: red;\r\n      border-color: red;\r\n    }\r\n    :focus {\r\n      border-color: yellow;\r\n      border: 3px solid yellow;\r\n    }\r\n  }\r\n`;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchRequest = createAction(\"contacts/fetchRequest\");\r\nexport const fetchSuccess = createAction(\"contacts/fetchSuccess\");\r\nexport const fetchError = createAction(\"contacts/fetchError\");\r\n\r\nexport const contactSaveRequest = createAction(\"contacts/contactSaveRequest\");\r\nexport const contactSaveSuccess = createAction(\"contacts/contactSaveSuccess\");\r\nexport const contactSaveError = createAction(\"contacts/contactSaveError\");\r\n\r\nexport const contactRemoveRequest = createAction(\r\n  \"contacts/contactRemoveRequest\"\r\n);\r\nexport const contactRemoveSuccess = createAction(\r\n  \"contacts/contactRemoveSuccess\"\r\n);\r\nexport const contactRemoveError = createAction(\"contacts/contactRemoveError\");\r\n\r\nexport const filterUpdate = createAction(\"contacts/filterUpdate\");\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  contactSaveRequest,\r\n  contactSaveSuccess,\r\n  contactSaveError,\r\n  contactRemoveRequest,\r\n  contactRemoveSuccess,\r\n  contactRemoveError,\r\n  fetchRequest,\r\n} from \"../../redux/contacts/contacts-actions\";\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContacts(data));\r\n  } catch (error) {}\r\n  // axios\r\n  //   .get(\"/contacts\")\r\n  //   .then(({ data }) => dispatch(fetchSuccess(data)))\r\n  //   .catch((error) => dispatch(fetchError(error)));\r\n};\r\n\r\nexport const contactSave = (contact) => (dispatch) => {\r\n  dispatch(contactSaveRequest());\r\n  axios\r\n    .post(\"./contacts\", contact)\r\n    .then(({ data }) => {\r\n      \r\n      dispatch(contactSaveSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(contactSaveError(error)));\r\n};\r\n\r\nexport const contactRemove = (contactId) => (dispatch) => {\r\n  dispatch(contactRemoveRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(contactRemoveSuccess(contactId)))\r\n    .catch((error) => dispatch(contactRemoveError(error)));\r\n};\r\n\r\nexport default {\r\n  contactSave,\r\n  contactRemove,\r\n  fetchContacts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PhonebookItemStyled } from \"./PhonebookFormItemStyled\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactSave } from \"../../redux/contacts/contacts-operations\";\r\n\r\nclass PhonebookFormItem extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleNameChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n    const nameValue = this.setState({ [name]: value });\r\n\r\n    return nameValue;\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"phonebook-container\">\r\n        <h2 className=\"phonebook-title\">Phonebook</h2>\r\n        <PhonebookItemStyled\r\n          action=\"\"\r\n          className=\"form-input\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <label className=\"phonebook-name\">\r\n            Name\r\n            <br />\r\n            <input\r\n              onChange={this.handleNameChange}\r\n              value={this.state.name}\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"phonebook-filter\"\r\n              required\r\n              id={this.id}\r\n            />\r\n          </label>\r\n\r\n          <label className=\"phonebook-number\">\r\n            Number\r\n            <br />\r\n            <input\r\n              onChange={this.handleNameChange}\r\n              value={this.state.number}\r\n              className=\"input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={this.id}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className=\"add-contact-btn\">\r\n            Add contact\r\n          </button>\r\n        </PhonebookItemStyled>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(contactSave(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(PhonebookFormItem);\r\n\r\nPhonebookFormItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\n// const getVisibleContacts = (state) => {\r\n//   const contacts = getAllContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter((item) =>\r\n      item.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterUpdate } from \"../../redux/contacts/contacts-actions\";\r\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nfunction FilterItem({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <label className=\"phonebook-name\">\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          className=\"Type-editor-input\"\r\n          onChange={onChangeFilter}\r\n          value={value}\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilterItem.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (evt) => {\r\n    console.log(evt);\r\n    dispatch(filterUpdate(evt.target.value));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterItem);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsItemStyled = styled.ul`\r\n  .contacts-item {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .delete-button {\r\n    width: 100px;\r\n    height: 20px;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ContactsItemStyled } from \"./ContactsItemStyled\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactRemove } from \"../../redux/contacts/contacts-operations\";\r\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactsItem = ({ name, number, onClickRemove }) => {\r\n  return (\r\n    <li className=\"contacts-item\">\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" className=\"delete-button\" onClick={onClickRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  return (\r\n    contacts.length > 0 && (\r\n      <ContactsItemStyled>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactsItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onClickRemove={() => onRemove(id)}\r\n          />\r\n        ))}\r\n      </ContactsItemStyled>\r\n    )\r\n  );\r\n};\r\n\r\nContactsItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClickRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nContactsList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onRemove: (contactId) => dispatch(contactRemove(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React, { Component } from \"react\";\r\nimport PhonebookFormItem from \"../../Components/phonebookForm/PhonebookFormItem\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport FilterItem from \"../../Components/filter/FilterItem\";\r\nimport ContactsList from \"../../Components/contacts/ContactsItem\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\n\r\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  // Отображение имени и телефона, после ввода данных в инпут\r\n  formSubmithandler = (data) => {\r\n    const { contacts } = this.state;\r\n    const dublicateContact = contacts.find(\r\n      (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\r\n    );\r\n\r\n    if (dublicateContact) {\r\n      alert(`${dublicateContact.name} is already in contacts!`);\r\n      return;\r\n    }\r\n    const newContact = { name: data.name, number: data.number, id: uuidv4() };\r\n    this.setState((preState) => {\r\n      return { contacts: [...preState.contacts, newContact] };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PhonebookFormItem />\r\n        <h2 className=\"contacts-title\">Contacts</h2>\r\n        <FilterItem />\r\n        <ContactsList />\r\n        {this.props.isLoadingContacts && <h1>Загружаем</h1>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n","import React from \"react\";\r\nimport { ContactsItemStyled } from \"../contacts/ContactsItemStyled\";\r\n\r\nconst Container = ({ children }) => (\r\n  <ContactsItemStyled>{children}</ContactsItemStyled>\r\n);\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Главная\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Контакты\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../../redux/auth\";\r\nimport defaultAvatar from \"./default-avatar.png\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  name: authSelectors.getUsername(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu/UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"1px solid #2A363B\",\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst PrivatRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/Login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivatRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectedTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectedTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeView from \"./redux/views/HomeView\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport RegisterView from \"./redux/views/RegisterView\";\r\nimport LoginView from \"./redux/views/LoginView\";\r\nimport ContactsView from \"./redux/views/ContactsView\";\r\nimport Container from \"./Components/container/Container\";\r\nimport AppBar from \"./Components/AppBar\";\r\nimport { authOperations } from \"./redux/auth\";\r\nimport PrivatRoute from \"./Components/PrivatRoute\";\r\nimport PublicRoute from \"./Components/PublicRoute\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\" component={HomeView} />\r\n          <PublicRoute\r\n            path=\"/register\"\r\n            redirectedTo=\"/\"\r\n            restricted\r\n            component={RegisterView}\r\n          />\r\n          <PublicRoute\r\n            path=\"/login\"\r\n            redirectedTo=\"/\"\r\n            restricted\r\n            component={LoginView}\r\n          />\r\n          <PrivatRoute\r\n            path=\"/contacts\"\r\n            redirectedTo=\"/login\"\r\n            component={ContactsView}\r\n          />\r\n        </Switch>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onGetCurrentUser: () => {},\r\n// });\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  contactSaveRequest,\r\n  contactSaveSuccess,\r\n  contactSaveError,\r\n  contactRemoveRequest,\r\n  contactRemoveSuccess,\r\n  contactRemoveError,\r\n  filterUpdate,\r\n  fetchRequest,\r\n  fetchSuccess,\r\n  fetchError,\r\n} from \"./contacts-actions\";\r\n\r\n\r\nconst items = createReducer([], {\r\n  [fetchSuccess]: (state, { payload }) => payload,\r\n  // [fetchRequest]: (state, { payload }) => payload,\r\n  [contactSaveSuccess]: (state, { payload }) => [...state, payload],\r\n  [contactRemoveSuccess]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterUpdate]: (state, { payload }) => {\r\n    console.log(payload);\r\n    return payload;\r\n  },\r\n});\r\nconst error = createReducer(null, {});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactSaveRequest]: () => true,\r\n  [contactSaveSuccess]: () => false,\r\n  [contactSaveError]: () => false,\r\n  [contactRemoveRequest]: () => true,\r\n  [contactRemoveSuccess]: () => false,\r\n  [contactRemoveError]: () => false,\r\n  [fetchRequest]: () => true,\r\n  [fetchSuccess]: () => false,\r\n  [fetchError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport authReducer from \"./auth/auth-reducer\";\r\nimport logger from \"redux-logger\";\r\n\r\n// const myMiddleware = (store) => (next) => (action) => {\r\n//   console.log(\"прослойка\", action);\r\n//   next(action);\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // myMiddleware,\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}